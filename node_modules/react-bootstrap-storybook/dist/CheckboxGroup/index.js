"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CheckboxGroup = exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactBootstrap = require("react-bootstrap");

var _keyBy2 = _interopRequireDefault(require("lodash/keyBy"));

var _excluded = ["data", "name", "inline", "value", "onChange"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var CheckboxGroup = function CheckboxGroup(_ref) {
  var data = _ref.data,
      name = _ref.name,
      inline = _ref.inline,
      value = _ref.value,
      onChange = _ref.onChange,
      props = _objectWithoutProperties(_ref, _excluded);

  var objectValue = _react.default.useMemo(function () {
    return (0, _keyBy2.default)(value);
  }, [value]);

  var handleOnCLick = function handleOnCLick(id) {
    return function (e) {
      if (objectValue[id]) {
        delete objectValue[id];
      } else {
        objectValue[id] = id;
      }

      onChange(Object.values(objectValue), e);
    };
  };

  return /*#__PURE__*/_react.default.createElement("div", {
    className: "mb-3"
  }, data.map(function (item) {
    return /*#__PURE__*/_react.default.createElement(_reactBootstrap.Form.Check, _extends({
      key: item.id,
      id: item.id,
      label: item.name,
      inline: inline,
      name: name,
      disabled: item.disabled,
      checked: objectValue[item.id],
      onChange: handleOnCLick(item.id)
    }, props));
  }));
};

exports.CheckboxGroup = CheckboxGroup;
CheckboxGroup.defaultProps = {
  data: [],
  type: 'checkbox',
  name: 'checkbox-group-name',
  inline: true,
  value: [],
  onChange: function onChange() {}
};
CheckboxGroup.propTypes = {
  data: _propTypes.default.arrayOf(Object),
  type: _propTypes.default.oneOf(['checkbox', 'switch']),
  name: _propTypes.default.string,
  inline: _propTypes.default.bool,
  value: _propTypes.default.instanceOf(Array),
  onChange: _propTypes.default.func
};
exports.CheckboxGroup = CheckboxGroup = /*#__PURE__*/_react.default.memo(CheckboxGroup);
var _default = CheckboxGroup;
exports.default = _default;