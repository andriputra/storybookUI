"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Confirm = exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactBootstrap = require("react-bootstrap");

require("./index.css");

var _excluded = ["title", "children", "footer", "show", "onHide", "onSave", "onCancel", "backdrop", "type", "contentClassName", "noBtnText", "yesBtnText"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var modalSize = {
  SM: 'sm',
  LG: 'lg',
  XL: 'xl'
};
var colors = {
  confirm: '#00000033',
  warning: '#faad14',
  info: '#1890ff',
  error: '#ff4d4f'
};
var icons = {
  confirm: /*#__PURE__*/_react.default.createElement("i", {
    style: {
      color: colors.warning
    },
    className: "bi bi-exclamation-circle bootstrap-confirm-icon"
  }),
  warning: /*#__PURE__*/_react.default.createElement("i", {
    style: {
      color: colors.warning
    },
    className: "bi bi-exclamation-circle bootstrap-confirm-icon"
  }),
  info: /*#__PURE__*/_react.default.createElement("i", {
    style: {
      color: colors.info
    },
    className: "bi bi-info-circle bootstrap-confirm-icon"
  }),
  error: /*#__PURE__*/_react.default.createElement("i", {
    style: {
      color: colors.error
    },
    className: "bi bi-x-circle bootstrap-confirm-icon"
  })
};

var Confirm = function Confirm(_ref) {
  var title = _ref.title,
      children = _ref.children,
      footer = _ref.footer,
      show = _ref.show,
      onHide = _ref.onHide,
      onSave = _ref.onSave,
      onCancel = _ref.onCancel,
      backdrop = _ref.backdrop,
      type = _ref.type,
      contentClassName = _ref.contentClassName,
      noBtnText = _ref.noBtnText,
      yesBtnText = _ref.yesBtnText,
      props = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/_react.default.createElement(_reactBootstrap.Modal, _extends({
    show: show,
    onHide: onHide,
    backdrop: 'static',
    keyboard: false,
    contentClassName: "".concat(contentClassName, " ").concat(type)
  }, props), /*#__PURE__*/_react.default.createElement(_reactBootstrap.Modal.Header, {
    className: "bootstrap-confirm-header"
  }, /*#__PURE__*/_react.default.createElement(_reactBootstrap.Modal.Title, {
    className: "bootstrap-confirm-title"
  }, icons[type], title)), /*#__PURE__*/_react.default.createElement(_reactBootstrap.Modal.Body, {
    className: "bootstrap-confirm-body"
  }, children), /*#__PURE__*/_react.default.createElement(_reactBootstrap.Modal.Footer, {
    className: "bootstrap-confirm-footer"
  }, noBtnText && /*#__PURE__*/_react.default.createElement(_reactBootstrap.Button, {
    className: "button-cancel",
    variant: "secondary",
    size: "sm",
    onClick: onCancel
  }, noBtnText), yesBtnText && /*#__PURE__*/_react.default.createElement(_reactBootstrap.Button, {
    className: "button-save",
    variant: "primary",
    size: "sm",
    onClick: onSave
  }, yesBtnText)));
};

exports.Confirm = Confirm;
Confirm.defaultProps = {
  title: 'Confirm',
  children: '',
  show: false,
  size: modalSize.SM,
  centered: true,
  dialogClassName: 'bootstrap-confirm',
  contentClassName: 'bootstrap-confirm-content',
  backdropClassName: 'bootstrap-confirm-backdrop',
  type: 'confirm',
  noBtnText: 'No',
  yesBtnText: 'Yes',
  onSave: undefined,
  onCancel: undefined
};
Confirm.propTypes = {
  title: _propTypes.default.any,
  children: _propTypes.default.any,
  show: _propTypes.default.bool,
  size: _propTypes.default.oneOf(Object.values(modalSize)),
  centered: _propTypes.default.bool,
  dialogClassName: _propTypes.default.string,
  contentClassName: _propTypes.default.string,
  backdropClassName: _propTypes.default.string,
  type: _propTypes.default.oneOf(Object.keys(icons)),
  noBtnText: _propTypes.default.string,
  yesBtnText: _propTypes.default.string,
  onSave: _propTypes.default.func,
  onCancel: _propTypes.default.func
};
var _default = Confirm;
exports.default = _default;