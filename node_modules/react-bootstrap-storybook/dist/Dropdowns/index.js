"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Dropdowns = exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactBootstrap = require("react-bootstrap");

var _find2 = _interopRequireDefault(require("lodash/find"));

var _excluded = ["data", "defaultText", "value", "onChange", "maxHeight", "variant"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Toggle = _reactBootstrap.Dropdown.Toggle,
    Menu = _reactBootstrap.Dropdown.Menu,
    Item = _reactBootstrap.Dropdown.Item;
var dropdownVariant = {
  PRIMARY: 'primary',
  SECONDARY: 'secondary',
  SUCCESS: 'success',
  DANGER: 'danger',
  WARNING: 'warning',
  INFO: 'info',
  DARK: 'dark',
  LIGHT: 'light',
  LINK: 'link',
  OUTLINE_PRIMARY: 'outline-primary',
  OUTLINE_SECONDARY: 'outline-secondary',
  OUTLINE_SUCCESS: 'outline-success',
  OUTLINE_DANGER: 'outline-danger',
  OUTLINE_WARNING: 'outline-warning',
  OUTLINE_INFO: 'outline-info',
  OUTLINE_DARK: 'outline-dark',
  OUTLINE_LIGHT: 'outline-light'
};

var Dropdowns = function Dropdowns(_ref) {
  var data = _ref.data,
      defaultText = _ref.defaultText,
      value = _ref.value,
      onChange = _ref.onChange,
      maxHeight = _ref.maxHeight,
      variant = _ref.variant,
      props = _objectWithoutProperties(_ref, _excluded);

  var handleOnChange = function handleOnChange(val) {
    return function (e) {
      onChange(val, e);
    };
  };

  var title = value && (0, _find2.default)(data, function (item) {
    return item.id === value;
  });

  if (_typeof(title) === 'object') {
    title = title.name;
  }

  return /*#__PURE__*/_react.default.createElement(_reactBootstrap.Dropdown, props, /*#__PURE__*/_react.default.createElement(Toggle, {
    variant: variant
  }, title || defaultText), /*#__PURE__*/_react.default.createElement(Menu, {
    style: {
      overflowY: 'auto',
      maxHeight: maxHeight
    }
  }, data.map(function (item) {
    return /*#__PURE__*/_react.default.createElement(Item, {
      key: item.id,
      href: item.href,
      id: item.id,
      active: item.id === value,
      onClick: handleOnChange(item.id)
    }, item.name);
  })));
};

exports.Dropdowns = Dropdowns;
Dropdowns.defaultProps = {
  data: [],
  value: '',
  defaultText: 'Select...',
  maxHeight: 300,
  variant: undefined,
  onChange: function onChange() {}
};
Dropdowns.propTypes = {
  data: _propTypes.default.arrayOf(Object),
  value: _propTypes.default.string,
  defaultText: _propTypes.default.string,
  maxHeight: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  variant: _propTypes.default.oneOf(Object.values(dropdownVariant)),
  onChange: _propTypes.default.func
};
var _default = Dropdowns;
exports.default = _default;