"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ListGroup = exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactBootstrap = require("react-bootstrap");

var _excluded = ["action", "data", "value", "onChange", "flush"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Item = _reactBootstrap.ListGroup.Item;

var ListGroup = function ListGroup(_ref) {
  var action = _ref.action,
      data = _ref.data,
      value = _ref.value,
      onChange = _ref.onChange,
      flush = _ref.flush,
      props = _objectWithoutProperties(_ref, _excluded);

  var handleOnChange = function handleOnChange(val) {
    return function (e) {
      if (action) {
        onChange(val, e);
      }
    };
  };

  return /*#__PURE__*/_react.default.createElement(_reactBootstrap.ListGroup, _extends({
    variant: flush ? 'flush' : undefined
  }, props), data.map(function (item) {
    return /*#__PURE__*/_react.default.createElement(Item, {
      key: item.id,
      action: action,
      active: action && item.id === value,
      disabled: item.disabled,
      onClick: handleOnChange(item.id)
    }, item.name);
  }));
};

exports.ListGroup = ListGroup;
ListGroup.defaultProps = {
  action: true,
  data: [],
  value: '',
  horizontal: null,
  flush: false,
  onChange: function onChange() {}
};
ListGroup.propTypes = {
  action: _propTypes.default.bool,
  data: _propTypes.default.arrayOf(Object),
  value: _propTypes.default.string,
  horizontal: _propTypes.default.oneOf([true, 'sm', 'md', 'lg', 'xl', 'xxl']),
  flush: _propTypes.default.bool,
  onChange: _propTypes.default.func
};
var _default = ListGroup;
exports.default = _default;