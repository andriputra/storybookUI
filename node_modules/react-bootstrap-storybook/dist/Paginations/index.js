"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Paginations = exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactBootstrap = require("react-bootstrap");

require("./index.css");

var _excluded = ["count", "pageSize", "activeIndex", "onChange", "config", "size"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var First = _reactBootstrap.Pagination.First,
    Prev = _reactBootstrap.Pagination.Prev,
    Item = _reactBootstrap.Pagination.Item,
    Ellipsis = _reactBootstrap.Pagination.Ellipsis,
    Next = _reactBootstrap.Pagination.Next,
    Last = _reactBootstrap.Pagination.Last;

var makeItem = function makeItem(index, activeIndex, setActiveIndex, size) {
  return /*#__PURE__*/_react.default.createElement(Item, {
    className: "paginations-item ".concat(size),
    active: index === activeIndex,
    onClick: setActiveIndex(index)
  }, index + 1);
};

var makeEllipsis = function makeEllipsis(index, activeIndex, setActiveIndex, size) {
  return /*#__PURE__*/_react.default.createElement(Ellipsis, {
    className: "paginations-item ".concat(size),
    onClick: setActiveIndex(index)
  });
};

var getRange = function getRange(_ref) {
  var totalPage = _ref.totalPage,
      activeIndex = _ref.activeIndex,
      setActiveIndex = _ref.setActiveIndex,
      config = _ref.config,
      size = _ref.size;
  var range = [];
  var maxPage = totalPage - 1;

  var renderItem = function renderItem(index) {
    return makeItem(index, activeIndex, setActiveIndex, size);
  };

  var renderEllipsis = function renderEllipsis(index) {
    return makeEllipsis(index, activeIndex, setActiveIndex, size);
  };

  var middle = Math.floor(config / 2);

  if (totalPage <= config + 4) {
    for (var i = 0; i < totalPage; i += 1) {
      range.push(renderItem(i));
    }
  } else {
    var leftMiddle = activeIndex - middle;
    var rightMiddle = activeIndex + middle;
    range.push(renderItem(0));

    if (leftMiddle > 1) {
      range.push(renderEllipsis(Math.max(activeIndex - config, 0)));
    }

    var configMore = config + 1;
    var max = Math.max(rightMiddle, configMore);
    var min = Math.min(leftMiddle, maxPage - configMore);

    for (var _i = Math.max(min, 1); _i <= Math.min(max, maxPage - 1); _i += 1) {
      range.push(renderItem(_i));
    }

    if (rightMiddle < maxPage - 1) {
      range.push(renderEllipsis(Math.min(activeIndex + config, maxPage)));
    }

    range.push(renderItem(maxPage));
  }

  return range;
};

var Paginations = function Paginations(_ref2) {
  var count = _ref2.count,
      pageSize = _ref2.pageSize,
      activeIndex = _ref2.activeIndex,
      onChange = _ref2.onChange,
      config = _ref2.config,
      size = _ref2.size,
      props = _objectWithoutProperties(_ref2, _excluded);

  var totalPage = Math.ceil(count / pageSize);

  var setActiveIndex = function setActiveIndex(index) {
    return function () {
      if (index !== activeIndex) {
        onChange(index);
      }
    };
  };

  var range = getRange({
    totalPage: totalPage,
    setActiveIndex: setActiveIndex,
    activeIndex: activeIndex,
    config: config,
    size: size
  });
  var disabledFirst = activeIndex === 0;
  var disabledLast = activeIndex === totalPage - 1;
  return /*#__PURE__*/_react.default.createElement(_reactBootstrap.Pagination, _extends({
    size: size
  }, props), /*#__PURE__*/_react.default.createElement(First, {
    disabled: disabledFirst,
    onClick: setActiveIndex(0)
  }), /*#__PURE__*/_react.default.createElement(Prev, {
    disabled: disabledFirst,
    onClick: setActiveIndex(Math.max(0, activeIndex - 1))
  }), range.map(function (item, index) {
    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, {
      key: "key-".concat(index)
    }, item);
  }), /*#__PURE__*/_react.default.createElement(Next, {
    disabled: disabledLast,
    onClick: setActiveIndex(Math.min(totalPage - 1, activeIndex + 1))
  }), /*#__PURE__*/_react.default.createElement(Last, {
    disabled: disabledLast,
    onClick: setActiveIndex(totalPage - 1)
  }));
};

exports.Paginations = Paginations;
Paginations.defaultProps = {
  count: 0,
  pageSize: 10,
  activeIndex: 0,
  config: 5,
  size: undefined,
  onChange: function onChange() {}
};
Paginations.propTypes = {
  count: _propTypes.default.number,
  pageSize: _propTypes.default.number,
  activeIndex: _propTypes.default.number,
  config: _propTypes.default.oneOf([3, 5, 7, 9, 11]),
  size: _propTypes.default.oneOf(['sm', 'lg']),
  onChange: _propTypes.default.func
};
var _default = Paginations;
exports.default = _default;