"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tablesVariants = exports.Tables = exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactBootstrap = require("react-bootstrap");

require("./index.css");

var _excluded = ["data", "columns", "rowKey", "value", "onChange"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var tablesVariants = {
  PRIMARY: 'primary',
  SECONDARY: 'secondary',
  SUCCESS: 'success',
  DANGER: 'danger',
  WARNING: 'warning',
  INFO: 'info',
  DARK: 'dark',
  LIGHT: 'light',
  LINK: 'link'
};
exports.tablesVariants = tablesVariants;

var Tables = function Tables(_ref) {
  var data = _ref.data,
      columns = _ref.columns,
      rowKey = _ref.rowKey,
      value = _ref.value,
      onChange = _ref.onChange,
      props = _objectWithoutProperties(_ref, _excluded);

  var handleOnChange = function handleOnChange(val) {
    return function (e) {
      onChange(val, e);
    };
  };

  return /*#__PURE__*/_react.default.createElement(_reactBootstrap.Table, props, /*#__PURE__*/_react.default.createElement("thead", null, /*#__PURE__*/_react.default.createElement("tr", null, columns.map(function (col) {
    return /*#__PURE__*/_react.default.createElement("th", {
      key: col.dataIndex
    }, col.title);
  }))), /*#__PURE__*/_react.default.createElement("tbody", null, data.map(function (item, rowIndex) {
    var id = item[rowKey];
    var className = id === value ? 'tables-item-selected' : '';
    return /*#__PURE__*/_react.default.createElement("tr", {
      key: id,
      className: className,
      onClick: handleOnChange(id)
    }, columns.map(function (col) {
      var render = col.render,
          dataIndex = col.dataIndex;
      var label = item[dataIndex];

      if (typeof render === 'function') {
        label = render(id, _objectSpread(_objectSpread({}, item), {}, {
          rowIndex: rowIndex
        }));
      }

      return /*#__PURE__*/_react.default.createElement("td", {
        key: "".concat(id).concat(dataIndex),
        className: className
      }, label);
    }));
  })));
};

exports.Tables = Tables;
Tables.defaultProps = {
  data: [],
  columns: [],
  rowKey: 'id',
  striped: true,
  bordered: true,
  hover: true,
  responsive: true,
  borderless: false,
  size: undefined,
  variant: undefined,
  value: '',
  onChange: function onChange() {}
};
Tables.propTypes = {
  data: _propTypes.default.arrayOf(Object),
  columns: _propTypes.default.arrayOf(Object),
  rowKey: _propTypes.default.string,
  striped: _propTypes.default.bool,
  bordered: _propTypes.default.bool,
  hover: _propTypes.default.bool,
  responsive: _propTypes.default.bool,
  borderless: _propTypes.default.bool,
  size: _propTypes.default.oneOf(['sm', 'lg']),
  variant: _propTypes.default.oneOf(Object.values(tablesVariants)),
  value: _propTypes.default.string,
  onChange: _propTypes.default.func
};
var _default = Tables;
exports.default = _default;